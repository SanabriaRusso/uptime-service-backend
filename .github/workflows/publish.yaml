name: Publish

on:
  push:
    tags:
    - '*'
  workflow_dispatch:
    inputs:
      docker_tag_prefix:
        description: "Enter the Docker Tag Prefix (e.g adhoc-test)"
        required: true
        type: string
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 🏷️ Generate Tag
        run: |
          BRANCH_OR_TAG=$(basename ${{ github.ref }})
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            PREFIX="${{ github.event.inputs.docker_tag_prefix }}"
            SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
            echo "TAG=$PREFIX-$BRANCH_OR_TAG-$SHORT_SHA" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.event.ref }}" ]; then
            echo "TAG=$BRANCH_OR_TAG" >> $GITHUB_ENV
          else
            echo "Invalid event. Exiting..."
            exit 1
          fi
      - name: 🔑 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
      - name: 📦 Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: 🛠️ Build Uptime Service Backend Docker Image
        run: |
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          nix-shell --run "make docker"
      - name: 🚚 Push Uptime Service Backend Docker Image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG
